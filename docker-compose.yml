version: "2.4"
services:
  applications:
    image: tianon/true
    volumes:
      - "${LOCAL_PATH1:-../web/pt1}:/var/www${POINTER1:-pt1}"
      - "${LOCAL_PATH2:-../web/pt2}:/var/www${POINTER2:-pt2}"
      - "${LOCAL_PATH3:-../web/pt3}:/var/www${POINTER3:-pt3}"
      - "${APP_PATH:-../web/app}:${APP_POINTER:-/usr/src/app}"

  workspace:
    build:
      context: ./workspace
      args:
        - "PHP_VERSION=${PHP_VERSION:-7.2}"
        - "NPROC=${NPROC:-1}"
        - "TZ=${TIMEZONE:-UTC}"
        - "PUID=${PUID:-1000}"
        - "PGID=${PGID:-1000}"
        - "LINUX_USER=${LINUX_USER:-kimhsiao}"
        - "CANVAS_SUPPORT=${WORKSPACE_CANVAS_SUPPORT:-false}"
        - "INSTALL_MCRYPT=${PHP_FPM_INSTALL_MCRYPT:-false}"
        - "INSTALL_PDO_MYSQL=${PHP_FPM_INSTALL_PDO_MYSQL:-false}"
        - "INSTALL_PDO_PGSQL=${PHP_FPM_INSTALL_PDO_PGSQL:-false}"
        - "INSTALL_PDO_SQLITE=${PHP_FPM_INSTALL_PDO_SQLITE:-false}"
        - "INSTALL_GD=${PHP_FPM_INSTALL_GD:-false}"
        - "INSTALL_APC=${PHP_FPM_INSTALL_APC:-false}"
        - "INSTALL_FTP=${PHP_FPM_INSTALL_FTP:-false}"
        - "INSTALL_XSL=${PHP_FPM_INSTALL_XSL:-false}"
        - "INSTALL_CALENDAR=${PHP_FPM_INSTALL_CALENDAR:-false}"
        - "INSTALL_CTYPE=${PHP_FPM_INSTALL_CTYPE:-false}"
        - "INSTALL_DBA=${PHP_FPM_INSTALL_DBA:-false}"
        - "INSTALL_DOM=${PHP_FPM_INSTALL_DOM:-false}"
        - "INSTALL_JSON=${PHP_FPM_INSTALL_JSON:-false}"
        - "INSTALL_HASH=${PHP_FPM_INSTALL_HASH:-false}"
        - "INSTALL_SOCKETS=${PHP_FPM_INSTALL_SOCKETS:-false}"
        - "INSTALL_PDO=${PHP_FPM_INSTALL_PDO:-false}"
        - "INSTALL_MBSTRING=${PHP_FPM_INSTALL_MBSTRING:-false}"
        - "INSTALL_IMAP=${PHP_FPM_INSTALL_IMAP:-false}"
        - "INSTALL_CURL=${PHP_FPM_INSTALL_CURL:-false}"
        - "INSTALL_FILEINFO=${PHP_FPM_INSTALL_FILEINFO:-false}"
        - "INSTALL_GETTEXT=${PHP_FPM_INSTALL_GETTEXT:-false}"
        - "INSTALL_ICONV=${PHP_FPM_INSTALL_ICONV:-false}"
        - "INSTALL_PHAR=${PHP_FPM_INSTALL_PHAR:-false}"
        - "INSTALL_POSIX=${PHP_FPM_INSTALL_POSIX:-false}"
        - "INSTALL_PSPELL=${PHP_FPM_INSTALL_PSPELL:-false}"
        - "INSTALL_READLINE=${PHP_FPM_INSTALL_READLINE:-false}"
        - "INSTALL_RECODE=${PHP_FPM_INSTALL_RECODE:-false}"
        - "INSTALL_SHMOP=${PHP_FPM_INSTALL_SHMOP:-false}"
        - "INSTALL_SIMPLEXML=${PHP_FPM_INSTALL_SIMPLEXML:-false}"
        - "INSTALL_SNMP=${PHP_FPM_INSTALL_SNMP:-false}"
        - "INSTALL_SYSVMSG=${PHP_FPM_INSTALL_SYSVMSG:-false}"
        - "INSTALL_SYSVSEM=${PHP_FPM_INSTALL_SYSVSEM:-false}"
        - "INSTALL_SYSVSHM=${PHP_FPM_INSTALL_SYSVSHM:-false}"
        - "INSTALL_BZ2=${PHP_FPM_INSTALL_BZ2:-false}"
        - "INSTALL_ENCHANT=${PHP_FPM_INSTALL_ENCHANT:-false}"
        - "INSTALL_YAML=${PHP_FPM_INSTALL_YAML:-false}"
        - "INSTALL_EVENT=${PHP_FPM_INSTALL_EVENT:-false}"
        - "INSTALL_TIDY=${PHP_FPM_INSTALL_TIDY:-false}"
        - "INSTALL_WDDX=${PHP_FPM_INSTALL_WDDX:-false}"
        - "INSTALL_XML=${PHP_FPM_INSTALL_XML:-false}"
        - "INSTALL_XMLRPC=${PHP_FPM_INSTALL_XMLRPC:-false}"
        - "INSTALL_XMLWRITER=${PHP_FPM_INSTALL_XMLWRITER:-false}"
        - "INSTALL_SOAP=${PHP_FPM_INSTALL_SOAP:-false}"
        - "INSTALL_PGSQL=${PHP_FPM_INSTALL_PGSQL:-false}"
        - "INSTALL_PG_CLIENT=${WORKSPACE_INSTALL_PG_CLIENT:-false}"
        - "INSTALL_XDEBUG=${PHP_FPM_INSTALL_XDEBUG:-false}"
        - "INSTALL_BLACKFIRE=${PHP_FPM_INSTALL_BLACKFIRE:-false}"
        - "INSTALL_PHPREDIS=${PHP_FPM_INSTALL_PHPREDIS:-false}"
        - "INSTALL_SWOOLE=${PHP_FPM_INSTALL_SWOOLE:-false}"
        - "INSTALL_MONGO=${PHP_FPM_INSTALL_MONGO:-false}"
        - "INSTALL_AMQP=${PHP_FPM_INSTALL_AMQP:-false}"
        - "INSTALL_ZIP_ARCHIVE=${PHP_FPM_INSTALL_ZIP_ARCHIVE:-false}"
        - "INSTALL_BCMATH=${PHP_FPM_INSTALL_BCMATH:-false}"
        - "INSTALL_GMP=${PHP_FPM_INSTALL_GMP:-false}"
        - "INSTALL_MEMCACHED=${PHP_FPM_INSTALL_MEMCACHED:-false}"
        - "INSTALL_EXIF=${PHP_FPM_INSTALL_EXIF:-false}"
        - "INSTALL_AEROSPIKE=${PHP_FPM_INSTALL_AEROSPIKE:-false}"
        - "INSTALL_OPCACHE=${PHP_FPM_INSTALL_OPCACHE:-false}"
        - "INSTALL_MYSQLI=${PHP_FPM_INSTALL_MYSQLI:-false}"
        - "INSTALL_TOKENIZER=${PHP_FPM_INSTALL_TOKENIZER:-false}"
        - "INSTALL_INTL=${PHP_FPM_INSTALL_INTL:-false}"
        - "INSTALL_PCNTL=${PHP_FPM_INSTALL_PCNTL:-false}"
        - "INSTALL_GHOSTSCRIPT=${PHP_FPM_INSTALL_GHOSTSCRIPT:-false}"
        - "INSTALL_LDAP=${PHP_FPM_INSTALL_LDAP:-false}"
        - "INSTALL_MSSQL=${PHP_FPM_INSTALL_MSSQL:-false}"
        - "INSTALL_V8JS=${PHP_FPM_INSTALL_V8JS:-false}"
        - "INSTALL_SUHOSIN=${PHP_FPM_INSTALL_SUHOSIN:-false}"
        - "INSTALL_INOTIFY=${PHP_FPM_INSTALL_INOTIFY:-false}"
        - "INSTALL_OPENCC=${PHP_FPM_INSTALL_OEPNCC:-false}"
        - "INSTALL_PROTOBUF=${PHP_FPM_INSTALL_PROTOBUF:-true}"
        - "INSTALL_IMAGE_OPTIMIZERS=${PHP_FPM_INSTALL_IMAGE_OPTIMIZERS:-false}"
        - "INSTALL_IMAGEMAGICK=${PHP_FPM_INSTALL_IMAGEMAGICK:-false}"
        - "INSTALL_PHP_CODE_QUALITY_TOOLS=${WORKSPACE_INSTALL_PHP_CODE_QUALITY:-false}"
        - "INSTALL_DRUSH=${WORKSPACE_INSTALL_DRUSH:-false}"
        - "INSTALL_DRUPAL_CONSOLE=${WORKSPACE_INSTALL_DRUPAL_CONSOLE:-false}"
        - "INSTALL_LARAVEL_ENVOY=${WORKSPACE_INSTALL_LARAVEL_ENVOY:-false}"
        - "INSTALL_LARAVEL_INSTALLER=${WORKSPACE_INSTALL_LARAVEL_INSTALLER:-false}"
        - "INSTALL_DEPLOYER=${WORKSPACE_INSTALL_DEPLOYER:-false}"
        - "INSTALL_LINUXBREW=${WORKSPACE_INSTALL_LINUXBREW:-false}"
        - "INSTALL_MC=${WORKSPACE_INSTALL_MC:-false}"
        - "INSTALL_SYMFONY=${WORKSPACE_INSTALL_SYMFONY:-false}"
        - "INSTALL_PYTHON=${WORKSPACE_INSTALL_PYTHON:-false}"
        - "INSTALL_PYTHON3=${WORKSPACE_INSTALL_PYTHON3:-false}"
        - "CHROME_DRIVER_VERSION=${WORKSPACE_CHROME_DRIVER_VERSION:-false}"
        - "INSTALL_DUSK_DEPS=${WORKSPACE_INSTALL_DUSK_DEPS:-false}"
        - "INSTALL_NODEJS=${WORKSPACE_INSTALL_NODEJS:-false}"
        - "NODEJS_VERSION=${WORKSPACE_NODEJS_VERSION:-9}"
        - "NODEJS_VERSION_BACKUP=${WORKSPACE_NODEJS_VERSION_BACKUP:-false}"
        - "INSTALL_YARN=${WORKSPACE_INSTALL_YARN:-false}"
        - "NODEJS_YARN_VERSION=${WORKSPACE_NODEJS_YARN_VERSION:-latest}"
        - "NODEJS_NVM_VERSION=${WORKSPACE_NODEJS_NVM_VERSION:-v0.33.8}"
        - "INSTALL_WORKSPACE_SSH=${WORKSPACE_INSTALL_WORKSPACE_SSH:-false}"
    volumes:
      - "${LOG_DATA_SAVE_PATH}/workspace:/var/log"
      - "./workspace/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini:ro"
      - "./workspace/opcache.ini:/usr/local/etc/php/conf.d/opcache.ini:ro"
      - "./workspace/php.ini:/usr/local/etc/php/php.ini:ro"
    volumes_from:
      - applications
    environment:
      - "PHP_IDE_CONFIG=${PHP_IDE_CONFIG:-dev.com}"
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP:-10.3.2.1}"
    expose:
      - "9000"
    ports:
      - "${WORKSPACE_SSH_PORT:-22}:22"
      - "${WORKSPACE_PHP_XDEBUG_PORT}:9001"
    tty: true
    restart: ${WORKSPACE_RESTART:-always}
    networks:
      - frontend
      - backend

  php-fpm:
    build:
      context: ./php-fpm
      args:
        - "TZ=${TIMEZONE:-UTC}"
        - "PHP_VERSION=${PHP_VERSION:-7.2}"
        - "NPROC=${NPROC:-1}"
        - "INSTALL_MCRYPT=${PHP_FPM_INSTALL_MCRYPT:-false}"
        - "INSTALL_PDO_MYSQL=${PHP_FPM_INSTALL_PDO_MYSQL:-false}"
        - "INSTALL_PDO_PGSQL=${PHP_FPM_INSTALL_PDO_PGSQL:-false}"
        - "INSTALL_PDO_SQLITE=${PHP_FPM_INSTALL_PDO_SQLITE:-false}"
        - "INSTALL_GD=${PHP_FPM_INSTALL_GD:-false}"
        - "INSTALL_APC=${PHP_FPM_INSTALL_APC:-false}"
        - "INSTALL_FTP=${PHP_FPM_INSTALL_FTP:-false}"
        - "INSTALL_XSL=${PHP_FPM_INSTALL_XSL:-false}"
        - "INSTALL_CALENDAR=${PHP_FPM_INSTALL_CALENDAR:-false}"
        - "INSTALL_CTYPE=${PHP_FPM_INSTALL_CTYPE:-false}"
        - "INSTALL_DBA=${PHP_FPM_INSTALL_DBA:-false}"
        - "INSTALL_DOM=${PHP_FPM_INSTALL_DOM:-false}"
        - "INSTALL_JSON=${PHP_FPM_INSTALL_JSON:-false}"
        - "INSTALL_HASH=${PHP_FPM_INSTALL_HASH:-false}"
        - "INSTALL_SOCKETS=${PHP_FPM_INSTALL_SOCKETS:-false}"
        - "INSTALL_PDO=${PHP_FPM_INSTALL_PDO:-false}"
        - "INSTALL_MBSTRING=${PHP_FPM_INSTALL_MBSTRING:-false}"
        - "INSTALL_IMAP=${PHP_FPM_INSTALL_IMAP:-false}"
        - "INSTALL_CURL=${PHP_FPM_INSTALL_CURL:-false}"
        - "INSTALL_FILEINFO=${PHP_FPM_INSTALL_FILEINFO:-false}"
        - "INSTALL_GETTEXT=${PHP_FPM_INSTALL_GETTEXT:-false}"
        - "INSTALL_ICONV=${PHP_FPM_INSTALL_ICONV:-false}"
        - "INSTALL_PHAR=${PHP_FPM_INSTALL_PHAR:-false}"
        - "INSTALL_POSIX=${PHP_FPM_INSTALL_POSIX:-false}"
        - "INSTALL_PSPELL=${PHP_FPM_INSTALL_PSPELL:-false}"
        - "INSTALL_READLINE=${PHP_FPM_INSTALL_READLINE:-false}"
        - "INSTALL_RECODE=${PHP_FPM_INSTALL_RECODE:-false}"
        - "INSTALL_SHMOP=${PHP_FPM_INSTALL_SHMOP:-false}"
        - "INSTALL_SIMPLEXML=${PHP_FPM_INSTALL_SIMPLEXML:-false}"
        - "INSTALL_SNMP=${PHP_FPM_INSTALL_SNMP:-false}"
        - "INSTALL_SYSVMSG=${PHP_FPM_INSTALL_SYSVMSG:-false}"
        - "INSTALL_SYSVSEM=${PHP_FPM_INSTALL_SYSVSEM:-false}"
        - "INSTALL_SYSVSHM=${PHP_FPM_INSTALL_SYSVSHM:-false}"
        - "INSTALL_BZ2=${PHP_FPM_INSTALL_BZ2:-false}"
        - "INSTALL_ENCHANT=${PHP_FPM_INSTALL_ENCHANT:-false}"
        - "INSTALL_YAML=${PHP_FPM_INSTALL_YAML:-false}"
        - "INSTALL_EVENT=${PHP_FPM_INSTALL_EVENT:-false}"
        - "INSTALL_TIDY=${PHP_FPM_INSTALL_TIDY:-false}"
        - "INSTALL_WDDX=${PHP_FPM_INSTALL_WDDX:-false}"
        - "INSTALL_XML=${PHP_FPM_INSTALL_XML:-false}"
        - "INSTALL_XMLRPC=${PHP_FPM_INSTALL_XMLRPC:-false}"
        - "INSTALL_XMLWRITER=${PHP_FPM_INSTALL_XMLWRITER:-false}"
        - "INSTALL_SOAP=${PHP_FPM_INSTALL_SOAP:-false}"
        - "INSTALL_PGSQL=${PHP_FPM_INSTALL_PGSQL:-false}"
        - "INSTALL_XDEBUG=${PHP_FPM_INSTALL_XDEBUG:-false}"
        - "INSTALL_BLACKFIRE=${PHP_FPM_INSTALL_BLACKFIRE:-false}"
        - "INSTALL_PHPREDIS=${PHP_FPM_INSTALL_PHPREDIS:-false}"
        - "INSTALL_SWOOLE=${PHP_FPM_INSTALL_SWOOLE:-false}"
        - "INSTALL_MONGO=${PHP_FPM_INSTALL_MONGO:-false}"
        - "INSTALL_AMQP=${PHP_FPM_INSTALL_AMQP:-false}"
        - "INSTALL_ZIP_ARCHIVE=${PHP_FPM_INSTALL_ZIP_ARCHIVE:-false}"
        - "INSTALL_BCMATH=${PHP_FPM_INSTALL_BCMATH:-false}"
        - "INSTALL_GMP=${PHP_FPM_INSTALL_GMP:-false}"
        - "INSTALL_MEMCACHED=${PHP_FPM_INSTALL_MEMCACHED:-false}"
        - "INSTALL_EXIF=${PHP_FPM_INSTALL_EXIF:-false}"
        - "INSTALL_AEROSPIKE=${PHP_FPM_INSTALL_AEROSPIKE:-false}"
        - "INSTALL_OPCACHE=${PHP_FPM_INSTALL_OPCACHE:-false}"
        - "INSTALL_MYSQLI=${PHP_FPM_INSTALL_MYSQLI:-false}"
        - "INSTALL_TOKENIZER=${PHP_FPM_INSTALL_TOKENIZER:-false}"
        - "INSTALL_INTL=${PHP_FPM_INSTALL_INTL:-false}"
        - "INSTALL_PCNTL=${PHP_FPM_INSTALL_PCNTL:-false}"
        - "INSTALL_V8JS=${PHP_FPM_INSTALL_V8JS:-false}"
        - "INSTALL_SUHOSIN=${PHP_FPM_INSTALL_SUHOSIN:-false}"
        - "INSTALL_INOTIFY=${PHP_FPM_INSTALL_INOTIFY:-false}"
        - "INSTALL_OPENCC=${PHP_FPM_INSTALL_OEPNCC:-false}"
        - "INSTALL_PROTOBUF=${PHP_FPM_INSTALL_PROTOBUF:-true}"
        - "INSTALL_GHOSTSCRIPT=${PHP_FPM_INSTALL_GHOSTSCRIPT:-false}"
        - "INSTALL_LDAP=${PHP_FPM_INSTALL_LDAP:-false}"
        - "INSTALL_MSSQL=${PHP_FPM_INSTALL_MSSQL:-false}"
        - "INSTALL_IMAGE_OPTIMIZERS=${PHP_FPM_INSTALL_IMAGE_OPTIMIZERS:-false}"
        - "INSTALL_IMAGEMAGICK=${PHP_FPM_INSTALL_IMAGEMAGICK:-false}"
    volumes_from:
      - applications
    volumes:
      - "./php-fpm/laravel.ini:/usr/local/etc/php/php.ini:ro"
      - "${LOG_DATA_SAVE_PATH}/php-fpm:/var/log"
      - "./php-fpm/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini:ro"
      - "./php-fpm/opcache.ini:/usr/local/etc/php/conf.d/opcache.ini:ro"
    expose:
      - "9000"
    ports:
      - "${PHP_FPM_PHP_XDEBUG_PORT}:9001"
    depends_on:
      - workspace
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP:-10.3.2.1}"
    environment:
      - "PHP_IDE_CONFIG=${PHP_IDE_CONFIG:-dev.com}"
    restart: ${PHP_FPM_RESTART:-always}
    networks:
      - backend

  caddy:
    build:
      context: ./caddy
      args:
        - "TZ=${TIMEZONE:-UTC}"
        - "CADDY_PLUGINS=${CADDY_PLUGINS:-http}"
        - "CADDY_LICENSE=${CADDY_LICENSE:-personal}"
        - "HTTP_PORT=${HTTP_PORT:-80}"
        - "HTTPS_PORT=${HTTPS_PORT:-443}"
        - "HTTP_OTHER_PORT=${HTTP_OTHER_PORT:-2018}"
    volumes_from:
      - applications
    volumes:
      - "${CADDY_CUSTOM_CADDYFILE:-./Caddyfile}:/etc/CaddyFile"
      - "${LOG_DATA_SAVE_PATH}/caddy:/var/log"
      - "${DATA_SAVE_PATH}/caddy:/root/.caddy"
    ports:
      - "${HTTP_PORT:-80}:80"
      - "${HTTPS_PORT:-443}:443"
      - "${HTTP_OTHER_PORT:-2018}:2018"
    depends_on:
      - workspace
    restart: ${CADDY_RESTART:-always}
    networks:
      - frontend
      - backend
  nginx:
    build:
      context: ./nginx
      args:
        - "NGINX_VERSION=${NGINX_VERSION:-latest}"
        - "TZ=${TIMEZONE:-UTC}"
        - "PHP_UPSTREAM_CONTAINER=${NGINX_PHP_UPSTREAM_CONTAINER:-workspace}"
        - "PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT:-9000}"
    volumes_from:
      - applications
    volumes:
      - "${LOG_DATA_SAVE_PATH}/nginx:/var/log/nginx"
      - "./nginx/nginx.conf:/etc/nginx/nginx.conf:ro"
      - "./nginx/settings:/etc/nginx/settings"
      - "${NGINX_SITES_PATH}:/etc/nginx/sites-enabled:ro"
    ports:
      - "${HTTP_PORT:-80}:80"
      - "${HTTPS_PORT:-443}:443"
      - "${HTTP_OTHER_PORT:-2018}:2018"
    depends_on:
      - workspace
    restart: ${NGINX_RESTART:-always}
    networks:
      - frontend
      - backend

  python3:
    build:
      context: ./python3
      args:
        - "PYTHON3_VERSION=${PYTHON3_VERSION:-3.8}"
        - "APP_POINTER=${APP_POINTER:-/usr/src/app}"
        - "TZ=${TIMEZONE:-UTC}"
    volumes_from:
      - applications
    volumes:
      - "${LOG_DATA_SAVE_PATH}/python3:${PYTHON3_LOG_DIR:-/var/log/python3}"
      - "./python3/docker-entrypoint.sh:/usr/local/bin/docker-entrypoint.sh:ro"
    expose:
      - "${PYTHON3_EXPOSE:-8003}"
    ports:
      - "${PYTHON3_PORT}:8000"
    entrypoint: "/usr/local/bin/docker-entrypoint.sh"
    restart: ${PYTHON3_RESTART:-always}
    networks:
      - frontend
      - backend

  mariadb:
    build:
      context: ./mariadb
      args:
        - "TZ=${TIMEZONE:-UTC}"
        - "MARIADB_VERSION=${MARIADB_VERSION:-latest}"
    volumes:
      - "${DATA_SAVE_PATH}/mariadb:/var/lib/mysql"
      - "${MARIADB_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d"
      - "${LOG_DATA_SAVE_PATH}/mariadb:/var/log"
    ports:
      - "${MARIADB_PORT:-3306}:3306"
    environment:
      - "MYSQL_DATABASE=${MARIADB_DATABASE:-default}"
      - "MYSQL_USER=${MARIADB_USER:-default}"
      - "MYSQL_PASSWORD=${MARIADB_PASSWORD:-secret}"
      - "MYSQL_ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD:-root}"
    restart: ${MARIADB_RESTART:-always}
    networks:
      - backend

  mysql:
    build:
      context: ./mysql
      args:
        - "TZ=${TIMEZONE:-UTC}"
        - "MYSQL_VERSION=${MYSQL_VERSION:-latest}"
    volumes:
      - "${DATA_SAVE_PATH}/mysql:/var/lib/mysql"
      - "${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d"
      - "${LOG_DATA_SAVE_PATH}/mysql:/var/log"
      - "./mysql/${MYSQL_CONFIG_FILE:-my.cnf}:/etc/conf.d/my.cnf:ro"
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    environment:
      - "MYSQL_DATABASE=${MYSQL_DATABASE:-default}"
      - "MYSQL_USER=${MYSQL_USER:-default}"
      - "MYSQL_PASSWORD=${MYSQL_PASSWORD:-secret}"
      - "MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-root}"
      - "TZ=${TIMEZONE:-UTC}"
    restart: ${MYSQL_RESTART:-always}
    networks:
      - backend

  percona:
    build:
      context: ./percona
      args:
        - "TZ=${TIMEZONE:-UTC}"
        - "PERCONA_VERSION=${PERCONA_VERSION:-latest}"
    volumes:
      - "${DATA_SAVE_PATH}/percona:/var/lib/mysql"
      - "${LOG_DATA_SAVE_PATH}/percona:/var/log"
    environment:
      - "MYSQL_DATABASE=${PERCONA_DATABASE:-default}"
      - "MYSQL_USER=${PERCONA_USER:-default}"
      - "MYSQL_PASSWORD=${PERCONA_PASSWORD:-secret}"
      - "MYSQL_ROOT_PASSWORD=${PERCONA_ROOT_PASSWORD:-root}"
      - "TZ=${TIMEZONE:-UTC}"
    ports:
      - "${PERCONA_PORT:-3306}:3306"
    restart: ${PERCONA_RESTART:-always}
    networks:
      - backend

  postgres:
    build:
      context: ./postgres
      args:
        - "POSTGRES_VERSION=${POSTGRES_VERSION:-latest}"
        - "TZ=${TIMEZONE:-UTC}"
    volumes:
      - "postgres_data:/var/lib/postgresql/data"
      - "${LOG_DATA_SAVE_PATH}/postgres:/var/log"
    environment:
      - "POSTGRES_DB=${POSTGRES_DB:-default}"
      - "POSTGRES_USER=${POSTGRES_USER:-default}"
      - "POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-secret}"
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    restart: ${POSTGRES_RESTART:-always}
    networks:
      - backend

  postgis:
    build:
      context: ./postgis
      args:
        - "TZ=${TIMEZONE:-UTC}"
        - "POSTGIS_VERSION=${POSTGIS_VERSION:-latest}"
    volumes:
      - postgis_data:/var/lib/postgresql/data
      - "${LOG_DATA_SAVE_PATH}/postgis:/var/log"
    environment:
      - "POSTGRES_DB=${POSTGRES_DB:-default}"
      - "POSTGRES_USER=${POSTGRES_USER:-default}"
      - "POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-secret}"
    ports:
      - "${POSTGIS_PORT:-5432}:5432"
    restart: ${POSTGIS_RESTART:-always}
    networks:
      - backend

  elasticsearch:
    build:
      context: ./elasticsearch
      args:
        - "ELASTICSEARCH_VERSION=${ELASTICSEARCH_VERSION:-6.2.2}"
        - "ELASTICSEARCH_ENABLE_SECURITY=${ELASTICSEARCH_ENABLE_SECURITY:-false}"
        - "ELASTICSEARCH_SMARTCN_ANALYZER=${ELASTICSEARCH_SMARTCN_ANALYZER:-false}"
        - "ELASTICSEARCH_IK_ANALYZER=${ELASTICSEARCH_IK_ANALYZER:-false}"
        - "ELASTICSEARCH_ANSJ_ANALYZER=${ELASTICSEARCH_ANSJ_ANALYZER:-false}"
    environment:
      - "http.host=${ELASTICSEARCH_HTTP_HOST:-9200}"
      - "transport.host=${ELASTICSEARCH_TRANSPORT_HOST:-9300}"
      - "xpack.security.enabled=${ELASTICSEARCH_ENABLE_SECURITY:-false}"
      - "xpack.monitoring.enable=${ELASTICSEARCH_ENABLE_SECURITY:-false}"
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms${ELASTICSEARCH_MIN_MEMORY:-512m} -Xmx${ELASTICSEARCH_MAX_MEMORY}"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: "${ELASTICSEARCH_LIMIT_MEMORY:-1g}"
    volumes:
      - "./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro"
      - "${LOG_DATA_SAVE_PATH}/elasticsearch:/var/log"
      - "${DATA_SAVE_PATH}/elasticsearch:/usr/share/elasticsearch/data"
    ports:
      - "${ELASTICSEARCH_HOST_HTTP_PORT:-9200}:9200"
      - "${ELASTICSEARCH_HOST_TRANSPORT_PORT:-9300}:9300"
    restart: ${ELASTICSEARCH_RESTART:-always}
    networks:
      - backend

  mongo:
    build:
      context: ./mongo
      args:
        - "TZ=${TIMEZONE:-UTC}"
        - "MONGO_VERSION=${MONGO_VERSION:-latest}"
    volumes:
      - "${DATA_SAVE_PATH}/mongo:/data/db"
      - "${LOG_DATA_SAVE_PATH}/mongo:/var/log"
    ports:
      - "${MONGO_PORT:-27017}:27017"
    restart: ${MONGO_RESTART:-always}
    networks:
      - backend

  redis:
    build:
      context: ./redis
      args:
        - "TZ=${TIMEZONE:-UTC}"
        - "REDIS_VERSION=${REDIS_VERSION:-latest}"
    volumes:
      - "${DATA_SAVE_PATH}/redis:/data"
      - "${LOG_DATA_SAVE_PATH}/redis:/var/log"
    ports:
      - "${REDIS_PORT:-6379}:6379"
    restart: ${REDIS_RESTART:-always}
    networks:
      - backend

  memcached:
    build:
      context: ./memcached
      args:
        - "TZ=${TIMEZONE:-UTC}"
        - "MEMCACHED_VERSION=${MEMCACHED_VERSION:-latest}"
    volumes:
      - "${LOG_DATA_SAVE_PATH}/memcached:/var/log"
    ports:
      - "${MEMCACHED_PORT:-11211}:11211"
    restart: ${MEMCACHED_RESTART:-always}
    networks:
      - backend

  minio:
    build:
      context: ./minio
      args:
        - "TZ=${TIMEZONE:-UTC}"
        - "MINIO_VERSION=${MINIO_VERSION:-latest}"
    volumes:
      - "${DATA_SAVE_PATH}/minio/data:/export"
      - "${DATA_SAVE_PATH}/minio/config:/root/.minio"
    ports:
      - "${MINIO_PORT}:9000"
    environment:
      - "MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY:-access}"
      - "MINIO_SECRET_KEY=${MINIO_SECRET_KEY:-secretkey}"
    networks:
      - backend
      - frontend

  kibana:
    build:
      context: ./kibana
      args:
        - "KIBANA_VERSION=${KIBANA_VERSION:-6.2.2}"
        - "KIBANA_ENABLE_SECURITY=${KIBANA_ENABLE_SECURITY:-false}"
    environment:
      - "ELASTICSEARCH_URL=http://elasticsearch:${ELASTICSEARCH_HOST_HTTP_PORT:-9300}"
      - "XPACK_MONITORING_ENABLED=${KIBANA_ENABLE_SECURITY:-false}"
      - "XPACK_SECURITY_ENABLED=${KIBANA_ENABLE_SECURITY:-false}"
    volumes:
      - "./kibana/config:/usr/share/kibana/config:ro"
      - "${LOG_DATA_SAVE_PATH}/kibana:/var/log"
      - "${DATA_SAVE_PATH}/kibana:/usr/share/kibana/data"
    links:
      - elasticsearch
    ports:
      - "${KIBANA_PORT:-5601}:5601"
    depends_on:
      - elasticsearch
    restart: ${KIBANA_RESTART:-always}
    networks:
      - frontend
      - backend

  logstash:
    build:
      context: ./logstash
      args:
        - "LOGSTASH_VERSION=${LOGSTASH_VERSION:-6.2.2}"
    environment:
      - "LS_JAVA_OPTS=-Xms${LOGSTASH_MIN_MEMORY:-256m} -Xmx${LOGSTASH_MAX_MEMORY:-256m}"
    volumes:
      - "./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro"
      - "./logstash/pipeline:/usr/share/logstash/pipeline:ro"
      - "${LOG_DATA_SAVE_PATH}/logstash:/var/log"
      - "${DATA_SAVE_PATH}/logstash:/usr/share/logstash/data"
    links:
      - elasticsearch
    ports:
      - "${LOGSTASH_PORT:-5002}:5002"
    depends_on:
      - elasticsearch
    restart: ${LOGSTASH_RESTART:-always}
    networks:
      - backend

  rethinkdb:
    build:
      context: ./rethinkdb
      args:
        - "RETHINKDB_VERSION=${RETHINKDB_VERSION:-latest}"
        - "TZ=${TIMEZONE:-UTC}"
    volumes:
      - "${DATA_SAVE_PATH}/rethinkdb:/data/rethinkdb_data"
      - "${LOG_DATA_SAVE_PATH}/rethinkdb:/var/log"
    ports:
      - "${RETHINKDB_PORT}:8080"
    restart: ${RETHINKDB_RESTART:-always}
    networks:
      - backend

  rabbitmq:
    build:
      context: ./rabbitmq
      args:
        - "RABBITMQ_VERSION=${RABBITMQ_VERSION:-latest}"
        - "TZ=${TIMEZONE:-UTC}"
    environment:
      - "RABBITMQ_DEFAULT_USER=${RABBITMQ_USER:-test}"
      - "RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD:-test}"
      - "RABBITMQ_DEFAULT_VHOST=${RABBITMQ_VHOST:-/}"
      - "RABBITMQ_ERLANG_COOKIE=${RABBITMQ_COOKIE:-test}"
    volumes:
      - "${LOG_DATA_SAVE_PATH}/rabbitmq:/var/log"
      - "${DATA_SAVE_PATH}/rabbitmq/config:/var/lib/rabbitmq/config"
      - "${DATA_SAVE_PATH}/rabbitmq/mnesia:/var/lib/rabbitmq/mnesia"
      - "${DATA_SAVE_PATH}/rabbitmq/schema:/var/lib/rabbitmq/schema"
    ports:
      - "${RABBITMQ_EPMD_PORT:-4369}:4369"
      - "${RABBITMQ_NODE_HOST_PORT_SSL:-5671}:5671"
      - "${RABBITMQ_NODE_HOST_PORT:-5672}:5672"
      - "${RABBITMQ_MANAGEMENT_HTTP_HOST_PORT:-15672}:15672"
      - "${RABBITMQ_MANAGEMENT_HTTPS_HOST_PORT:-15671}:15671"
      - "${RABBITMQ_CLUSTER_PORT:-25672}:25672"
    restart: ${RABBITMQ_RESTART:-always}
    networks:
      - backend

  php-worker:
    build:
      context: ./php-worker
      args:
        - "PHP_VERSION=${PHP_VERSION}"
        - "INSTALL_MYSQLI=${PHP_FPM_INSTALL_MYSQLI:-true}"
        - "INSTALL_MBSTRING=${PHP_FPM_INSTALL_MBSTRING:-true}"
        - "INSTALL_JSON=${PHP_FPM_INSTALL_JSON:-true}"
        - "INSTALL_CURL=${PHP_FPM_INSTALL_CURL:-true}"
        - "INSTALL_ICONV=${PHP_FPM_INSTALL_ICONV:-true}"
        - "INSTALL_TOKENIZER=${PHP_FPM_INSTALL_TOKENIZER:-true}"
        - "INSTALL_BCMATH=${PHP_FPM_INSTALL_BCMATH:-true}"
        - "INSTALL_EXIF={PHP_FPM_INSTALL_EXIF:-true}"
        - "INSTALL_XML=${PHP_FPM_INSTALL_XML:-true}"
        - "INSTALL_INTL=${PHP_FPM_INSTALL_INTL:-true}"
        - "INSTALL_GMP=${PHP_FPM_INSTALL_GMP:-true}"
        - "INSTALL_PGSQL=${PHP_FPM_INSTALL_PGSQL:-true}"
        - "INSTALL_PHPREDIS=${PHP_FPM_INSTALL_PHPREDIS:-true}"
        - "INSTALL_MEMCACHED=${PHP_FPM_INSTALL_MEMCACHED:-true}"
        - "TZ=${TIMEZONE:-UTC}"
    volumes:
      - "${LOG_DATA_SAVE_PATH}/php-worker:/var/log"
      - "./php-worker/supervisord.conf:/etc/supervisord.conf:ro"
    volumes_from:
      - applications
    depends_on:
      - workspace
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    restart: ${PHP_WORKER_RESTART:-always}
    networks:
      - backend

  phpmyadmin:
    build:
      context: ./phpmyadmin
      args:
        - "PMA_VERSION=${PMA_VERSION:-latest}"
    environment:
      - PMA_ARBITRARY=1
      - "PMA_HOST=${PMA_HOST:-mariadb}"
      - "PMA_PORT=${PMA_PORT:-3306}"
      - "PMA_USER=${PMA_USER:-root}"
      - "PMA_PASSWORD=${PMA_PASSWORD:-root}"
    ports:
      - "${PMA_EXT_PORT:-80}:80"
    depends_on:
      - "${PMA_DB_ENGINE:-mariadb}"
    restart: ${PMA_RESTART:-always}
    networks:
      - backend
      - frontend

  gitlab:
    image: "gitlab/gitlab-ce:${GITLAB_VERSION:-latest}"
    volumes:
      - "${DATA_SAVE_PATH}/gitlab/${GITLAB_CONF_DIR:-config}:/etc/gitlab"
      - "${DATA_SAVE_PATH}/gitlab/${GITLAB_HOME_DIR:-home}:/var/opt/gitlab"
      - "${LOG_DATA_SAVE_PATH}/gitlab:/var/log/gitlab"
    ports:
      - "${GITLAB_HTTP_PORT:-80}:80"
      - "${GITLAB_HTTPS_PORT:-443}:443"
      - "${GITLAB_SSH_PORT:-22}:22"
    restart: ${GITLAB_RESTART:-always}
    networks:
      - frontend

  nodejs:
    build:
      context: nodejs
      args:
        - "NODEJS_VERSION=${NODEJS_VERSION:-latest}"
        - "NODEJS_USER=${NODEJS_USER:-kimhsiao}"
        - "NODEJS_YARN_VERSION=${NODEJS_YARN_VERSION:-latest}"
    environment:
      - "NODE_ENV=${NODEJS_ENV:-develop}"
      - "mem_limit=${NODEJS_MEMORY_LIMIT:-512M}"
      - "memswap_limit=${NODEJS_MEMORY_SWAP_LIMIT:-1G}"
    volumes:
      - "${NODEJS_WORKING_DIR}:/home/${NODEJS_USER}/app"
      - "${LOG_DATA_SAVE_PATH}/nodejs:/var/log"
    ports:
      - "${NODEJS_PORT_MAPPING_1:-80}:80"
      - "${NODEJS_PORT_MAPPING_2:-443}:443"
      - "${NODEJS_PORT_MAPPING_3:-3000}:3000"
      - "${NODEJS_PORT_MAPPING_4:-8080}:8080"
    restart: ${NODEJS_RESTART:-always}
    networks:
      - backend
      - frontend

  cratedb:
    image: "library/crate:${CRATEDB_VERSION:-latest}"
    environment:
      - "CRATE_HEAP_SIZE=${CRATEDB_HEAP_SIZE:-1g}"
    volumes:
      - "${DATA_SAVE_PATH}/cratedb:/data"
      - "${LOG_DATA_SAVE_PATH}/cratedb:/var/log"
    ports:
      - "${CRATEDB_HTTP_PORT:-4200}:4200"
      - "${CRATEDB_TRANSPORT_PORT:-4300}:4300"
      - "${CRATEDB_PGSQL_PROTOCOL_PORT:-5432}:5432"
    restart: ${CRATEDB_RESTART:-always}
    networks:
      - backend
      - frontend

volumes:
  postgres_data:
    driver: local
  postgis_data:
    driver: local

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
